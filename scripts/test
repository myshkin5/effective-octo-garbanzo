#!/usr/bin/env bash

check-cmd() {
    CMD=$1
    which $CMD > /dev/null
    if [[ $? == 1 ]]; then
        help-cmd $@
    fi
    test -x $(which $CMD)
    if [[ $? == 1 ]]; then
        help-cmd $@
    fi
}

help-cmd() {
    echo "$1 not found"
    shift
    echo "Execute the following to install: $*"
    exit 1
}

check-cmd goimports "go get golang.org/x/tools/cmd/goimports"
check-cmd ginkgo    "go get github.com/onsi/ginkgo/ginkgo"

set -e

cd $(dirname $0)/..

stop-integration-services() {
    docker-compose --file scripts/postgres-docker-compose.yml down
}

error-trap() {
    echo -e "\033[1m\033[41m Failed!                                                                        \033[0m"
    stop-integration-services
}

trap 'error-trap' ERR

goimports -w $(ls | grep -Ev "LICENSE|README.md|vendor")

INTEGRATION_REGEXP=".* Integration"
GINKGO_OPTS="-r
    --keepGoing
    --randomizeAllSpecs
    --randomizeSuites
    --failOnPending
    --cover
    --trace
    --race
    --progress
    $@"

echo -e "\033[1m\033[42m Unit tests...                                                                  \033[0m"
ginkgo -r --skip="$INTEGRATION_REGEXP" $GINKGO_OPTS

echo -e "\033[1m\033[42m Integration tests...                                                           \033[0m"

docker-compose --file ./scripts/postgres-docker-compose.yml up -d --force-recreate
until PGPASSWORD=garbanzo-secret psql --port=5678 --host=0.0.0.0 --username=garbanzo --command='\l' > /dev/null 2>&1; do
  sleep 1
done

export DB_SERVER=localhost
export DB_PORT=5678
export DB_USERNAME=garbanzo
export DB_PASSWORD=garbanzo-secret

go run persistence/migrate/main.go

ginkgo -r --focus="$INTEGRATION_REGEXP" $GINKGO_OPTS

stop-integration-services

echo -e "\033[1m\033[42m Completed successfully.                                                        \033[0m"
