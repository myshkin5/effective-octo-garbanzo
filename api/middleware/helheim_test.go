// This file was generated by github.com/nelsam/hel.  Do not
// edit this code by hand unless you *really* know what you're
// doing.  Expect any changes made manually to be overwritten
// the next time hel regenerates this file.

package middleware_test

type mockValidator struct {
	IsValidCalled chan bool
	IsValidInput  struct {
		AuthHeader chan string
	}
	IsValidOutput struct {
		IsValid chan bool
	}
}

func newMockValidator() *mockValidator {
	m := &mockValidator{}
	m.IsValidCalled = make(chan bool, 100)
	m.IsValidInput.AuthHeader = make(chan string, 100)
	m.IsValidOutput.IsValid = make(chan bool, 100)
	return m
}
func (m *mockValidator) IsValid(authHeader string) (isValid bool) {
	m.IsValidCalled <- true
	m.IsValidInput.AuthHeader <- authHeader
	return <-m.IsValidOutput.IsValid
}
